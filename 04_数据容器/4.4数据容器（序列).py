'''
序列：内容连续、有序，可使用下标索引的一类数据容器

切片：从一个序列中，取出一个子序列

序列的典型特征就是：有序并可用下标索引，字符串、元组、列表均满足这个要求
序列支持切片，即：列表、元组、字符串，均支持进行切片操作
'''

'''
基本格式:
语法：序列[起始下标:结束下标:步长]

表示从序列中，从指定位置开始，依次取出元素，到指定位置结束，得到一个新序列：

起始下标表示从何处开始，可以留空，留空视作从头开始

结束下标（不含）表示何处结束，可以留空，留空视作截取到结尾

步长表示，依次取元素的间隔

步长1表示，一个个取元素
步长2表示，每次跳过1个元素取
步长N表示，每次跳过N-1个元素取
步长为负数表示，反向取（注意，起始下标和结束下标也要反向标记）
'''

'''
 基本用法:
用法
起始下标可以省略，省略从头开始
结束下标可以省略，省略到尾结束
步长可以省略，省略步长为1（可以为负数，表示倒序执行）
'''

# 用法一：
my_list = [1,2,3,4,5]
new_my_list = my_list[1:4] #从索引1开始，到最后结束（不包含最后一个元素），步长1
print(new_my_list)

# 用法二：
my_tuple = (1, 2, 3, 4, 5)
new_my_tuple = my_tuple[:] #从头开始，到最后结束，步长1
print(new_my_tuple)

# 用法三：
new_my_list1 = my_list[::2]  # 从头开始，到最后结束，步长2
print(new_my_list1)

# 用法四：
new_my_tuple1 = my_tuple[::3] #和三一样，不过这个是步长3
print(new_my_tuple1)

# 用法五：
my_str = "12345"
new_my_str = my_str[:4:2] # 从头开始，到下标4（不含）结束，步长2
print(new_my_str)

# 用法六：
my_list = [1, 2, 3, 4, 5]
new_list = my_list[3:1:-1]  # 从下标3开始，到下标1（不含）结束，步长-1（倒序）
print(new_list)  # 打印 [4, 3]



